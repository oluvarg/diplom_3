{"name": "Проверка изменения счетчика заказов за сегодня", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"AppHeader_header__link__3D_hX\" href=\"/feed\">...</a> is not clickable at point (284, 44). Other element would receive the click: <path d=\"M36.8809 26.904H46.1769V29H36.5289C35.1422 29 34.0809 28.6107 33.3449 27.832C32.6195 27.0427 32.2569 25.9493 32.2569 24.552C32.2569 23.1547 32.6195 22.0667 33.3449 21.288C34.0809 20.4987 35.1422 20.104 36.5289 20.104H46.1769V22.2H36.8809C36.3902 22.2 35.9849 22.3387 35.6649 22.616C35.5155 22.744 35.3235 23.0427 35.0889 23.512L35.0729 23.544H46.1769V25.544H35.0729L35.0889 25.592C35.3022 26.0507 35.4942 26.3493 35.6649 26.488C35.9849 26.7653 36.3902 26.904 36.8809 26.904Z\" fill=\"white\"></path>\n  (Session info: chrome-headless-shell=124.0.6367.202)\nStacktrace:\n\tGetHandleVerifier [0x00D1C183+48259]\n\t(No symbol) [0x00CACAB1]\n\t(No symbol) [0x00BA0A17]\n\t(No symbol) [0x00BE69EC]\n\t(No symbol) [0x00BE4E82]\n\t(No symbol) [0x00BE2CEB]\n\t(No symbol) [0x00BE22E7]\n\t(No symbol) [0x00BD7389]\n\t(No symbol) [0x00C00D9C]\n\t(No symbol) [0x00BD6E25]\n\t(No symbol) [0x00C01034]\n\t(No symbol) [0x00C19B9C]\n\t(No symbol) [0x00C00B36]\n\t(No symbol) [0x00BD570D]\n\t(No symbol) [0x00BD62CD]\n\tGetHandleVerifier [0x00FD6613+2908435]\n\tGetHandleVerifier [0x01013C2B+3159851]\n\tGetHandleVerifier [0x00DB513B+674875]\n\tGetHandleVerifier [0x00DBB2FC+699900]\n\t(No symbol) [0x00CB62B4]\n\t(No symbol) [0x00CB2308]\n\t(No symbol) [0x00CB249C]\n\t(No symbol) [0x00CA4C20]\n\tBaseThreadInitThunk [0x76C7FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77387CBE+286]\n\tRtlGetAppContainerNamedObjectPath [0x77387C8E+238]", "trace": "self = <tests.test_order_feed.TestOrderFeed object at 0x0000020EDF383A70>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"095d3e812cd18eba770b712427bb54c7\")>\n\n    @allure.title('Проверка изменения счетчика заказов за сегодня')\n    def test_today_orders_counter(self, driver):\n        pp = ProfilePage(driver)\n        ofp = OrderFeedPage(driver)\n        mp = MainPage(driver)\n    \n        pp.authorization()\n>       mp.click_button_order_feed()\n\ntests\\test_order_feed.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\main_page.py:25: in click_button_order_feed\n    self.click_element_if_clickable(MPL.BUTTON_ORDER_FEED)\npages\\base_page.py:39: in click_element_if_clickable\n    element.click()\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000020EDFAAF110>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77387CBE+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77387C8E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"AppHeader_header__link__3D_hX\" href=\"/feed\">...</a> is not clickable at point (284, 44). Other element would receive the click: <path d=\"M36.8809 26.904H46.1769V29H36.5289C35.1422 29 34.0809 28.6107 33.3449 27.832C32.6195 27.0427 32.2569 25.9493 32.2569 24.552C32.2569 23.1547 32.6195 22.0667 33.3449 21.288C34.0809 20.4987 35.1422 20.104 36.5289 20.104H46.1769V22.2H36.8809C36.3902 22.2 35.9849 22.3387 35.6649 22.616C35.5155 22.744 35.3235 23.0427 35.0889 23.512L35.0729 23.544H46.1769V25.544H35.0729L35.0889 25.592C35.3022 26.0507 35.4942 26.3493 35.6649 26.488C35.9849 26.7653 36.3902 26.904 36.8809 26.904Z\" fill=\"white\"></path>\nE         (Session info: chrome-headless-shell=124.0.6367.202)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00D1C183+48259]\nE       \t(No symbol) [0x00CACAB1]\nE       \t(No symbol) [0x00BA0A17]\nE       \t(No symbol) [0x00BE69EC]\nE       \t(No symbol) [0x00BE4E82]\nE       \t(No symbol) [0x00BE2CEB]\nE       \t(No symbol) [0x00BE22E7]\nE       \t(No symbol) [0x00BD7389]\nE       \t(No symbol) [0x00C00D9C]\nE       \t(No symbol) [0x00BD6E25]\nE       \t(No symbol) [0x00C01034]\nE       \t(No symbol) [0x00C19B9C]\nE       \t(No symbol) [0x00C00B36]\nE       \t(No symbol) [0x00BD570D]\nE       \t(No symbol) [0x00BD62CD]\nE       \tGetHandleVerifier [0x00FD6613+2908435]\nE       \tGetHandleVerifier [0x01013C2B+3159851]\nE       \tGetHandleVerifier [0x00DB513B+674875]\nE       \tGetHandleVerifier [0x00DBB2FC+699900]\nE       \t(No symbol) [0x00CB62B4]\nE       \t(No symbol) [0x00CB2308]\nE       \t(No symbol) [0x00CB249C]\nE       \t(No symbol) [0x00CA4C20]\nE       \tBaseThreadInitThunk [0x76C7FCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77387CBE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77387C8E+238]\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException"}, "steps": [{"name": "Авторизация", "status": "passed", "start": 1715523668654, "stop": 1715523672068}, {"name": "Нажатие на кнопку \"Лента Заказов\"", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"AppHeader_header__link__3D_hX\" href=\"/feed\">...</a> is not clickable at point (284, 44). Other element would receive the click: <path d=\"M36.8809 26.904H46.1769V29H36.5289C35.1422 29 34.0809 28.6107 33.3449 27.832C32.6195 27.0427 32.2569 25.9493 32.2569 24.552C32.2569 23.1547 32.6195 22.0667 33.3449 21.288C34.0809 20.4987 35.1422 20.104 36.5289 20.104H46.1769V22.2H36.8809C36.3902 22.2 35.9849 22.3387 35.6649 22.616C35.5155 22.744 35.3235 23.0427 35.0889 23.512L35.0729 23.544H46.1769V25.544H35.0729L35.0889 25.592C35.3022 26.0507 35.4942 26.3493 35.6649 26.488C35.9849 26.7653 36.3902 26.904 36.8809 26.904Z\" fill=\"white\"></path>\n  (Session info: chrome-headless-shell=124.0.6367.202)\nStacktrace:\n\tGetHandleVerifier [0x00D1C183+48259]\n\t(No symbol) [0x00CACAB1]\n\t(No symbol) [0x00BA0A17]\n\t(No symbol) [0x00BE69EC]\n\t(No symbol) [0x00BE4E82]\n\t(No symbol) [0x00BE2CEB]\n\t(No symbol) [0x00BE22E7]\n\t(No symbol) [0x00BD7389]\n\t(No symbol) [0x00C00D9C]\n\t(No symbol) [0x00BD6E25]\n\t(No symbol) [0x00C01034]\n\t(No symbol) [0x00C19B9C]\n\t(No symbol) [0x00C00B36]\n\t(No symbol) [0x00BD570D]\n\t(No symbol) [0x00BD62CD]\n\tGetHandleVerifier [0x00FD6613+2908435]\n\tGetHandleVerifier [0x01013C2B+3159851]\n\tGetHandleVerifier [0x00DB513B+674875]\n\tGetHandleVerifier [0x00DBB2FC+699900]\n\t(No symbol) [0x00CB62B4]\n\t(No symbol) [0x00CB2308]\n\t(No symbol) [0x00CB249C]\n\t(No symbol) [0x00CA4C20]\n\tBaseThreadInitThunk [0x76C7FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77387CBE+286]\n\tRtlGetAppContainerNamedObjectPath [0x77387C8E+238]\n\n", "trace": "  File \"C:\\Users\\zalman\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\zalman\\PycharmProjects\\Diplom\\diplom_3\\pages\\main_page.py\", line 25, in click_button_order_feed\n    self.click_element_if_clickable(MPL.BUTTON_ORDER_FEED)\n  File \"C:\\Users\\zalman\\PycharmProjects\\Diplom\\diplom_3\\pages\\base_page.py\", line 39, in click_element_if_clickable\n    element.click()\n  File \"C:\\Users\\zalman\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\zalman\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\zalman\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\zalman\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1715523672068, "stop": 1715523673177}], "parameters": [{"name": "driver", "value": "'chrome'"}], "start": 1715523668653, "stop": 1715523673178, "uuid": "814a337b-0728-4f1f-a00d-14deccb4fe1d", "historyId": "9f95ba655ace37a612f53f132319eb13", "testCaseId": "a7401c1353b13aeea26bbb5f5723665b", "fullName": "tests.test_order_feed.TestOrderFeed#test_today_orders_counter", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_feed"}, {"name": "subSuite", "value": "TestOrderFeed"}, {"name": "host", "value": "zalman"}, {"name": "thread", "value": "18748-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_feed"}]}